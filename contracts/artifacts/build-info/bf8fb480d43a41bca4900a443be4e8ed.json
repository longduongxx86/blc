{
	"id": "bf8fb480d43a41bca4900a443be4e8ed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/IntegerExample.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.1;\n\ncontract IntegerExample {\n    bool public myBool;\n\n    function setNewBool(bool _myBool) public {\n        myBool = _myBool;\n    }\n\n    function negateBool() public {\n        myBool = !myBool;\n    }\n\n    function retrieve() public returns (bool) {\n        return myBool;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/IntegerExample.sol": {
				"IntegerExample": {
					"abi": [
						{
							"inputs": [],
							"name": "myBool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "negateBool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retrieve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_myBool",
									"type": "bool"
								}
							],
							"name": "setNewBool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/IntegerExample.sol\":61:338  contract IntegerExample {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/IntegerExample.sol\":61:338  contract IntegerExample {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c16bb8f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e64cec1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6deecdbe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xabbc3b6b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/IntegerExample.sol\":196:258  function negateBool() public {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/IntegerExample.sol\":264:336  function retrieve() public returns (bool) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/IntegerExample.sol\":91:109  bool public myBool */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/IntegerExample.sol\":116:190  function setNewBool(bool _myBool) public {... */\n    tag_6:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/IntegerExample.sol\":196:258  function negateBool() public {... */\n    tag_8:\n        /* \"contracts/IntegerExample.sol\":245:251  myBool */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/IntegerExample.sol\":244:251  !myBool */\n      iszero\n        /* \"contracts/IntegerExample.sol\":235:241  myBool */\n      0x00\n      dup1\n        /* \"contracts/IntegerExample.sol\":235:251  myBool = !myBool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/IntegerExample.sol\":196:258  function negateBool() public {... */\n      jump\t// out\n        /* \"contracts/IntegerExample.sol\":264:336  function retrieve() public returns (bool) {... */\n    tag_10:\n        /* \"contracts/IntegerExample.sol\":300:304  bool */\n      0x00\n        /* \"contracts/IntegerExample.sol\":323:329  myBool */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/IntegerExample.sol\":316:329  return myBool */\n      swap1\n      pop\n        /* \"contracts/IntegerExample.sol\":264:336  function retrieve() public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/IntegerExample.sol\":91:109  bool public myBool */\n    tag_14:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/IntegerExample.sol\":116:190  function setNewBool(bool _myBool) public {... */\n    tag_19:\n        /* \"contracts/IntegerExample.sol\":176:183  _myBool */\n      dup1\n        /* \"contracts/IntegerExample.sol\":167:173  myBool */\n      0x00\n      dup1\n        /* \"contracts/IntegerExample.sol\":167:183  myBool = _myBool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/IntegerExample.sol\":116:190  function setNewBool(bool _myBool) public {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_24:\n        /* \"#utility.yul\":50:55   */\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_26\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":7:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:469   */\n    tag_18:\n        /* \"#utility.yul\":202:208   */\n      0x00\n        /* \"#utility.yul\":251:253   */\n      0x20\n        /* \"#utility.yul\":239:248   */\n      dup3\n        /* \"#utility.yul\":230:237   */\n      dup5\n        /* \"#utility.yul\":226:249   */\n      sub\n        /* \"#utility.yul\":222:254   */\n      slt\n        /* \"#utility.yul\":219:338   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":257:336   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":219:338   */\n    tag_29:\n        /* \"#utility.yul\":377:378   */\n      0x00\n        /* \"#utility.yul\":402:452   */\n      tag_32\n        /* \"#utility.yul\":444:451   */\n      dup5\n        /* \"#utility.yul\":435:441   */\n      dup3\n        /* \"#utility.yul\":424:433   */\n      dup6\n        /* \"#utility.yul\":420:442   */\n      add\n        /* \"#utility.yul\":402:452   */\n      tag_24\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":392:452   */\n      swap2\n      pop\n        /* \"#utility.yul\":348:462   */\n      pop\n        /* \"#utility.yul\":146:469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":475:584   */\n    tag_33:\n        /* \"#utility.yul\":556:577   */\n      tag_35\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":556:577   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":551:554   */\n      dup3\n        /* \"#utility.yul\":544:578   */\n      mstore\n        /* \"#utility.yul\":475:584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":590:800   */\n    tag_12:\n        /* \"#utility.yul\":677:681   */\n      0x00\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"#utility.yul\":704:713   */\n      dup3\n        /* \"#utility.yul\":700:718   */\n      add\n        /* \"#utility.yul\":692:718   */\n      swap1\n      pop\n        /* \"#utility.yul\":728:793   */\n      tag_38\n        /* \"#utility.yul\":790:791   */\n      0x00\n        /* \"#utility.yul\":779:788   */\n      dup4\n        /* \"#utility.yul\":775:792   */\n      add\n        /* \"#utility.yul\":766:772   */\n      dup5\n        /* \"#utility.yul\":728:793   */\n      tag_33\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":590:800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":887:977   */\n    tag_36:\n        /* \"#utility.yul\":921:928   */\n      0x00\n        /* \"#utility.yul\":964:969   */\n      dup2\n        /* \"#utility.yul\":957:970   */\n      iszero\n        /* \"#utility.yul\":950:971   */\n      iszero\n        /* \"#utility.yul\":939:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":887:977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1106:1223   */\n    tag_31:\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1212:1213   */\n      dup1\n        /* \"#utility.yul\":1205:1217   */\n      revert\n        /* \"#utility.yul\":1229:1345   */\n    tag_27:\n        /* \"#utility.yul\":1299:1320   */\n      tag_46\n        /* \"#utility.yul\":1314:1319   */\n      dup2\n        /* \"#utility.yul\":1299:1320   */\n      tag_36\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1292:1297   */\n      dup2\n        /* \"#utility.yul\":1289:1321   */\n      eq\n        /* \"#utility.yul\":1279:1339   */\n      tag_47\n      jumpi\n        /* \"#utility.yul\":1335:1336   */\n      0x00\n        /* \"#utility.yul\":1332:1333   */\n      dup1\n        /* \"#utility.yul\":1325:1337   */\n      revert\n        /* \"#utility.yul\":1279:1339   */\n    tag_47:\n        /* \"#utility.yul\":1229:1345   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e46ab97ab320e1cb268a023ec00184c2945acfa11943c6fd3750eb20674c48ad64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101e9806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c16bb8f146100515780632e64cec11461005b5780636deecdbe14610079578063abbc3b6b14610097575b600080fd5b6100596100b3565b005b6100636100dc565b6040516100709190610170565b60405180910390f35b6100816100f2565b60405161008e9190610170565b60405180910390f35b6100b160048036038101906100ac9190610134565b610103565b005b60008054906101000a900460ff16156000806101000a81548160ff021916908315150217905550565b60008060009054906101000a900460ff16905090565b60008054906101000a900460ff1681565b806000806101000a81548160ff02191690831515021790555050565b60008135905061012e8161019c565b92915050565b60006020828403121561014a57610149610197565b5b60006101588482850161011f565b91505092915050565b61016a8161018b565b82525050565b60006020820190506101856000830184610161565b92915050565b60008115159050919050565b600080fd5b6101a58161018b565b81146101b057600080fd5b5056fea2646970667358221220e46ab97ab320e1cb268a023ec00184c2945acfa11943c6fd3750eb20674c48ad64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC16BB8F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x6DEECDBE EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xABBC3B6B EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E DUP2 PUSH2 0x19C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A JUMPI PUSH2 0x149 PUSH2 0x197 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x158 DUP5 DUP3 DUP6 ADD PUSH2 0x11F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16A DUP2 PUSH2 0x18B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 DUP2 PUSH2 0x18B JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH11 0xB97AB320E1CB268A023EC0 ADD DUP5 0xC2 SWAP5 GAS 0xCF LOG1 NOT NUMBER 0xC6 REVERT CALLDATACOPY POP 0xEB KECCAK256 PUSH8 0x4C48AD64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "61:277:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@myBool_3": {
									"entryPoint": 242,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@negateBool_22": {
									"entryPoint": 179,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@retrieve_30": {
									"entryPoint": 220,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setNewBool_13": {
									"entryPoint": 259,
									"id": 13,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_bool": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1348:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:1",
														"type": ""
													}
												],
												"src": "7:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:260:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "257:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "230:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "226:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "251:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:32:1"
															},
															"nodeType": "YulIf",
															"src": "219:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "348:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "363:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "367:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "392:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "424:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "435:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "420:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "420:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "444:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "402:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "392:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "190:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "202:6:1",
														"type": ""
													}
												],
												"src": "146:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "534:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "551:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "571:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "556:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "522:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "529:3:1",
														"type": ""
													}
												],
												"src": "475:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "682:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "692:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "700:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "692:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "766:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "779:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "790:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "775:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "728:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "728:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "654:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "677:4:1",
														"type": ""
													}
												],
												"src": "590:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "846:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "856:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "872:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "866:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "856:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "839:6:1",
														"type": ""
													}
												],
												"src": "806:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "929:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "939:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "964:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "957:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "939:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "911:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "921:7:1",
														"type": ""
													}
												],
												"src": "887:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1072:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1089:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1092:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1082:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1082:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "983:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1195:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1212:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1205:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1205:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1106:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1269:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1323:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1332:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1335:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1325:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1325:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1325:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1292:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1314:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1299:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1299:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1289:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1289:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1282:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:40:1"
															},
															"nodeType": "YulIf",
															"src": "1279:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1262:5:1",
														"type": ""
													}
												],
												"src": "1229:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c16bb8f146100515780632e64cec11461005b5780636deecdbe14610079578063abbc3b6b14610097575b600080fd5b6100596100b3565b005b6100636100dc565b6040516100709190610170565b60405180910390f35b6100816100f2565b60405161008e9190610170565b60405180910390f35b6100b160048036038101906100ac9190610134565b610103565b005b60008054906101000a900460ff16156000806101000a81548160ff021916908315150217905550565b60008060009054906101000a900460ff16905090565b60008054906101000a900460ff1681565b806000806101000a81548160ff02191690831515021790555050565b60008135905061012e8161019c565b92915050565b60006020828403121561014a57610149610197565b5b60006101588482850161011f565b91505092915050565b61016a8161018b565b82525050565b60006020820190506101856000830184610161565b92915050565b60008115159050919050565b600080fd5b6101a58161018b565b81146101b057600080fd5b5056fea2646970667358221220e46ab97ab320e1cb268a023ec00184c2945acfa11943c6fd3750eb20674c48ad64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC16BB8F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x6DEECDBE EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xABBC3B6B EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E DUP2 PUSH2 0x19C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A JUMPI PUSH2 0x149 PUSH2 0x197 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x158 DUP5 DUP3 DUP6 ADD PUSH2 0x11F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16A DUP2 PUSH2 0x18B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 DUP2 PUSH2 0x18B JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH11 0xB97AB320E1CB268A023EC0 ADD DUP5 0xC2 SWAP5 GAS 0xCF LOG1 NOT NUMBER 0xC6 REVERT CALLDATACOPY POP 0xEB KECCAK256 PUSH8 0x4C48AD64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "61:277:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:62;;;:::i;:::-;;264:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;91:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;116:74;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;196:62;245:6;;;;;;;;;;244:7;235:6;;:16;;;;;;;;;;;;;;;;;;196:62::o;264:72::-;300:4;323:6;;;;;;;;;;;316:13;;264:72;:::o;91:18::-;;;;;;;;;;;;:::o;116:74::-;176:7;167:6;;:16;;;;;;;;;;;;;;;;;;116:74;:::o;7:133:1:-;50:5;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;7:133;;;;:::o;146:323::-;202:6;251:2;239:9;230:7;226:23;222:32;219:119;;;257:79;;:::i;:::-;219:119;377:1;402:50;444:7;435:6;424:9;420:22;402:50;:::i;:::-;392:60;;348:114;146:323;;;;:::o;475:109::-;556:21;571:5;556:21;:::i;:::-;551:3;544:34;475:109;;:::o;590:210::-;677:4;715:2;704:9;700:18;692:26;;728:65;790:1;779:9;775:17;766:6;728:65;:::i;:::-;590:210;;;;:::o;887:90::-;921:7;964:5;957:13;950:21;939:32;;887:90;;;:::o;1106:117::-;1215:1;1212;1205:12;1229:116;1299:21;1314:5;1299:21;:::i;:::-;1292:5;1289:32;1279:60;;1335:1;1332;1325:12;1279:60;1229:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "97800",
								"executionCost": "147",
								"totalCost": "97947"
							},
							"external": {
								"myBool()": "2490",
								"negateBool()": "26525",
								"retrieve()": "2479",
								"setNewBool(bool)": "24723"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 338,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 338,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 338,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 338,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 338,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 338,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 338,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 338,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 338,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 338,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 338,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e46ab97ab320e1cb268a023ec00184c2945acfa11943c6fd3750eb20674c48ad64736f6c63430008070033",
									".code": [
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "C16BB8F"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "2E64CEC1"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "6DEECDBE"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "ABBC3B6B"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 338,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 196,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 196,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 196,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 196,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 196,
											"end": 258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 196,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 196,
											"end": 258,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 196,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 245,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 245,
											"end": 251,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 245,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 251,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 245,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 245,
											"end": 251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 244,
											"end": 251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 235,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 235,
											"end": 251,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 235,
											"end": 251,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 235,
											"end": 251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 258,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 264,
											"end": 336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 323,
											"end": 329,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 323,
											"end": 329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 329,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 323,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 323,
											"end": 329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 316,
											"end": 329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 264,
											"end": 336,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 91,
											"end": 109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 109,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 116,
											"end": 190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 167,
											"end": 183,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 167,
											"end": 183,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 190,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 50,
											"end": 55,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 230,
											"end": 237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 226,
											"end": 249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 222,
											"end": 254,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 444,
											"end": 451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 424,
											"end": 433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 420,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 392,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 348,
											"end": 462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 475,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 556,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 556,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 544,
											"end": 578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 475,
											"end": 584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 584,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 800,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 590,
											"end": 800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 700,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 692,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 692,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 728,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 790,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 775,
											"end": 792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 728,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 728,
											"end": 793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 728,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 728,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 800,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 590,
											"end": 800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 590,
											"end": 800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 800,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 887,
											"end": 977,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 887,
											"end": 977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 921,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 957,
											"end": 970,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 950,
											"end": 971,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 939,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 939,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 887,
											"end": 977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 887,
											"end": 977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 887,
											"end": 977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 887,
											"end": 977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1106,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1106,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1345,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1229,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1314,
											"end": 1319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1299,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1299,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1299,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1321,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1279,
											"end": 1339,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1339,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1279,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1345,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"myBool()": "6deecdbe",
							"negateBool()": "0c16bb8f",
							"retrieve()": "2e64cec1",
							"setNewBool(bool)": "abbc3b6b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"myBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"negateBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_myBool\",\"type\":\"bool\"}],\"name\":\"setNewBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IntegerExample.sol\":\"IntegerExample\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IntegerExample.sol\":{\"keccak256\":\"0xe32f65d7dc2cdc36d7ba0c868592f9bbd5512379adc333d126063f32124fafd5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e953824a2a702ea998a143afd078de97a43e03ca12be0f51455bd034d7a76648\",\"dweb:/ipfs/QmekXxmKdZxYXjSK6sHsWj3SkuUmqFrSmrysJUwTLnHdcL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/IntegerExample.sol:IntegerExample",
								"label": "myBool",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> contracts/IntegerExample.sol:15:5:\n   |\n15 |     function retrieve() public returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 336,
					"file": "contracts/IntegerExample.sol",
					"start": 264
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/IntegerExample.sol": {
				"ast": {
					"absolutePath": "contracts/IntegerExample.sol",
					"exportedSymbols": {
						"IntegerExample": [
							31
						]
					},
					"id": 32,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "IntegerExample",
							"nameLocation": "70:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6deecdbe",
									"id": 3,
									"mutability": "mutable",
									"name": "myBool",
									"nameLocation": "103:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 31,
									"src": "91:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "91:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "157:33:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "myBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "167:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 9,
														"name": "_myBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "167:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "167:16:0"
											}
										]
									},
									"functionSelector": "abbc3b6b",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setNewBool",
									"nameLocation": "125:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "_myBool",
												"nameLocation": "141:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "136:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "136:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:14:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "157:0:0"
									},
									"scope": 31,
									"src": "116:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "225:33:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "myBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "235:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "244:7:0",
														"subExpression": {
															"id": 17,
															"name": "myBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "245:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "235:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "235:16:0"
											}
										]
									},
									"functionSelector": "0c16bb8f",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "negateBool",
									"nameLocation": "205:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:0:0"
									},
									"scope": 31,
									"src": "196:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "306:30:0",
										"statements": [
											{
												"expression": {
													"id": 27,
													"name": "myBool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "323:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 26,
												"id": 28,
												"nodeType": "Return",
												"src": "316:13:0"
											}
										]
									},
									"functionSelector": "2e64cec1",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retrieve",
									"nameLocation": "273:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "300:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 24,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "300:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:6:0"
									},
									"scope": 31,
									"src": "264:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 32,
							"src": "61:277:0",
							"usedErrors": []
						}
					],
					"src": "36:303:0"
				},
				"id": 0
			}
		}
	}
}